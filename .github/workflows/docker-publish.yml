name: Docker Publish

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - './any-listen/**'
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: lyswhut/any-listen-web-server

jobs:
  CheckTag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.check_tag.outputs.tag }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: 'true'

    - name: Check if submodule latest commit has a tag
      id: check_tag
      run: |
        cd any-listen
        latest_commit=$(git log -1 --format=%H)
        tag=$(git tag --contains $latest_commit)

        if [ -z "$tag" ]; then
          echo "No tag found for the latest commit in the submodule."
          echo "tag=" >> $GITHUB_OUTPUT
        else
          echo "Tag found for the latest commit: $tag"
          if [[ "$tag" == webserver-* ]]; then
            echo "Tag found for the latest commit: $tag, commit: $latest_commit"
            tag_formated=$(echo "$tag" | sed 's/^webserver-v\?//')
            echo "tag=$tag_formated" >> $GITHUB_OUTPUT
          else
            echo "Tag does not start with 'webserver-v', skipping build."
            echo "tag=" >> $GITHUB_OUTPUT
          fi
        fi

  Linux:
    needs: CheckTag
    name: Publish
    runs-on: ubuntu-latest
    if: needs.CheckTag.outputs.tag != ''
    steps:
      - name: Check out git repository
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ needs.CheckTag.outputs.tag }}
            type=raw,value=latest

      # Login to Docker Hub
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: ./any-listen
          file: ./any-listen/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  Linux-Armv7l:
    needs: CheckTag
    name: Publish
    runs-on: ubuntu-latest
    if: needs.CheckTag.outputs.tag != ''
    steps:
      - name: Check out git repository
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ needs.CheckTag.outputs.tag }}
            type=raw,value=latest

      # Login to Docker Hub
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: ./any-listen
          file: ./any-listen/Dockerfile.armv7l
          platforms: linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
