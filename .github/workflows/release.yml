name: Build

on:
  push:
    branches:
      - main

jobs:
  Linux:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install Dependencies
        run: |
          corepack enable
          cd any-listen && pnpm install

      - name: Build src code
        run: |
          cd any-listen
          npm run build:web
          cp ../ecosystem.config.js LICENSE ./build
          cp packages/web-server/Readme.md ./build
          mkdir ./build/data
          cp ../config.cjs ./build/data

      - name: Get package info
        run: |
          node -p -e '`PACKAGE_NAME=${require("./any-listen/packages/web-server/package.json").name}`' >> $GITHUB_ENV
          node -p -e '`PACKAGE_VERSION=${require("./any-listen/packages/web-server/package.json").version}`' >> $GITHUB_ENV

      - name: Create git tag
        uses: pkgdeps/git-tag-action@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_repo: ${{ github.repository }}
          version: ${{ env.PACKAGE_VERSION }}
          git_commit_sha: ${{ github.sha }}
          git_tag_prefix: "v"

      - name: Zip files
        run: cd any-listen/build && zip -r any-listen-web-server_v${{ env.PACKAGE_VERSION }}.zip server public data ecosystem.config.js index.cjs LICENSE Readme.md

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: ./any-listen/packages/web-server/changeLog.md
          prerelease: false
          draft: false
          tag_name: v${{ env.PACKAGE_VERSION }}
          files: |
            any-listen-web-server_v${{ env.PACKAGE_VERSION }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate file MD5
        run: |
          md5sum *.zip
