name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - './any-listen/**'

permissions:
  contents: write

jobs:
  CheckTag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.check_tag.outputs.tag }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: 'true'

    - name: Check if submodule latest commit has a tag
      id: check_tag
      run: |
        cd any-listen
        latest_commit=$(git log -1 --format=%H)
        tag=$(git tag --contains $latest_commit)

        if [ -z "$tag" ]; then
          echo "No tag found for the latest commit in the submodule."
          echo "tag=" >> $GITHUB_OUTPUT
        else
          echo "Tag found for the latest commit: $tag"
          if [[ "$tag" == webserver-* ]]; then
            echo "Tag found for the latest commit: $tag, commit: $latest_commit"
            tag_formated=$(echo "$tag" | sed 's/^webserver-v\?//')
            echo "tag=$tag_formated" >> $GITHUB_OUTPUT
          else
            echo "Tag does not start with 'webserver-v', skipping build."
            echo "tag=" >> $GITHUB_OUTPUT
          fi
        fi

  Linux:
    needs: CheckTag
    name: Build
    runs-on: ubuntu-latest
    if: needs.CheckTag.outputs.tag != ''
    steps:
      - name: Check out git repository
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Dependencies
        run: |
          cd any-listen
          pnpm install

      - name: Build src code
        run: |
          cd any-listen
          npm run build:web
          cp ../ecosystem.config.js LICENSE ./build
          cp packages/web-server/Readme.md ./build
          mkdir ./build/data
          cp ../config.cjs ./build/data

      - name: Get package info
        run: |
          node -p -e '`PACKAGE_NAME=${require("./any-listen/packages/web-server/package.json").name}`' >> $GITHUB_ENV
          node -p -e '`PACKAGE_VERSION=${require("./any-listen/packages/web-server/package.json").version}`' >> $GITHUB_ENV

      - name: Create git tag
        uses: pkgdeps/git-tag-action@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_repo: ${{ github.repository }}
          version: ${{ env.PACKAGE_VERSION }}
          git_commit_sha: ${{ github.sha }}
          git_tag_prefix: "v"

      - name: Zip files
        run: cd any-listen/build && zip -r any-listen-web-server_v${{ env.PACKAGE_VERSION }}.zip server node_modules public data ecosystem.config.js index.cjs LICENSE Readme.md

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: ./any-listen/packages/web-server/publish/changeLog.md
          prerelease: false
          draft: false
          tag_name: v${{ env.PACKAGE_VERSION }}
          files: |
            any-listen/build/any-listen-web-server_v${{ env.PACKAGE_VERSION }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate file MD5
        run: |
          md5sum any-listen/build/*.zip
